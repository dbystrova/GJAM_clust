viridis(16)
colors_virisds=viridis(16)
colors_virisds[1]
Colnames_Y[order(Colnames_Y$CN),3]
Colnames_Y[order(Colnames_Y$CN),4]
sapply(Colnames_Y[order(Colnames_Y$CN),4], function(x) colors_viridis(x))
colors_vir=viridis(16)
sapply(Colnames_Y[order(Colnames_Y$CN),4], function(x) colors_vir(x))
colors_vir=viridis(16)
sapply(Colnames_Y[order(Colnames_Y$CN),4], function(x) colors_vir[x])
colors_vir=viridis(16)
LabelCol = sapply(Colnames_Y[order(Colnames_Y$CN),4], function(x) colors_vir[x])
corrplot(cor(iris[,1:4]), type="upper",  tl.col=LabelCol)
MDP2= fit_gjamDP2$parameters$corMu
rownames(MDP2)=c(Colnames_Y[order(Colnames_Y$CN),3],"other")
colnames(MDP2)=c(Colnames_Y[order(Colnames_Y$CN),3],"other")
corrplot(MDP2, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.45,tl.srt=45, tl.col=LabelCol, method = "color",col=cols(200),
type = "lower", title= "Correlation for the DP2 model (original)", mar=c(0,0,1,0))
MDP2= fit_gjamDP2$parameters$corMu
rownames(MDP2)=c(Colnames_Y[order(Colnames_Y$CN),3],"other")
colnames(MDP2)=c(Colnames_Y[order(Colnames_Y$CN),3],"other")
corrplot(MDP2, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.45,tl.srt=45, tl.col=LabelCol, method = "color",col=cols(200),
type = "lower", title= "Correlation for the DP2 model (original)", mar=c(0,0,1,0))
corrplot(MDP2, diag = FALSE, order = "hclust",tl.pos = "ld", tl.cex = 0.45,tl.srt=45, tl.col=LabelCol,method = "color",col=cols(200),
type = "lower", title= "Correlation for the DP2 model (hclust)", mar=c(0,0,1,0))
#pdf(file = "Correlation_matrix_DP2.pdf", width= 8.27, height = 9.69)
colors_vir=viridis(16, option = "magma")
LabelCol = sapply(Colnames_Y[order(Colnames_Y$CN),4], function(x) colors_vir[x])
corrplot(cor(iris[,1:4]), type="upper",  tl.col=LabelCol)
corrplot(MDP2, diag = FALSE, order = "hclust",tl.pos = "ld", tl.cex = 0.45,tl.srt=45, tl.col=LabelCol,method = "color",col=cols(200),
type = "lower", title= "Correlation for the DP2 model (hclust)", mar=c(0,0,1,0))
library(tinytex)
tinytex::tlmgr_install("psnfss")
0.01*20
0.01*50
0.01*30
1/5000
1/10000
0.004*1000
sqrt(15000)
1/122
1/1000
install.packages("biglasso")
library(biglasso)
data(colon)
head(colon)
colon[1,1]
dim(colon)
colon[1]
colon[1][1]
colon[1][1][1]
library(biglasso)
install.packages("BGLR")
library(BGLR)
data(mice)
head(mice)
data(mice)
Y<-mice.pheno;
X<-mice.X;
A=mice.A;
y<-Y$Obesity.BMI;
y<-(y-mean(y))/sd(y)
y
head(Y)
data(wheat)
Y<-wheat.Y;
X<-wheat.X;
A<-wheat.A;
y<-Y[,1]
head(Y)
head(X)
dim(X)
X[1,1:20]
xx <- exprs(colonCA)
xx <- exprs(colon)
library(biglasso)
install.packages("Bioobase")
install.packages("Biobase")
install.packages("bioconductor")
library(dplyr)
xx <- exprs(colon)
X<- colon$X
head(X)
X[1:5, 1:5]
y<- colon$y
y
X<- colon$X
y<- colon$y
xx <- exprs(colon)
X<- colon$X
y<- colon$y
dim(X)
dim(y)
0.03 *20
10301/20000
285/20000
108/17322
7773/17322
0.25 + 0.09
0.25 - 0.09
0.23 - 0.09
0.23 + 0.09
285/17332
100*(285/17332)
100*(285/17322)
285/17322
285/20000
108/17322
10301/20000
7773/17322
rm(list=ls())
setwd("~/Documents/GitHub/GJAM_clust")
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(ggplot2)
library(AUC)
library(rlist)
library(formattable)
library(mcclust.ext)
library(reshape2)
library(plyr)
library(dplyr)
library(gridExtra)
library(grid)
library(factoextra)
library(Hmsc)
library(knitr)
library(tidyverse)
library(corrplot)
library(latex2exp)
library(cowplot)
library(rootSolve)
library(FactoMineR)
library(ggsci)
library(viridis)
library(rlist)
library(latex2exp)
library(GreedyEPL)
library(xlsx)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions.R")
source("R/gjam.R")
source("BNP_functions.R")
source('analysis/analysis_functions.R')
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
##### PCA data
set.seed(123)
PA_pdata<- load_object("Bauges_dataset/PA_data_clean_PCA.RData")
#Bauges_plant<- cbind(PA_pdata$PC1,PA_pdata$PC2, PA_pdata[,7:(ncol(PA_pdata)-2)])
#names(Bauges_plant) = c("PC1", "PC2", names(PA_pdata[,7:(ncol(PA_pdata)-2)]))
#save(Bauges_plant, file = "Bauges_plant.Rdata")
train_ind <- load_object( "Bauges_dataset/PCAtrain_ind.Rds")
y<- PA_pdata[,7:(ncol(PA_pdata)-2)]
Ydata<- gjamTrimY(y,20)$y
xdata_train <- PA_pdata[train_ind, (ncol(PA_pdata)-1):(ncol(PA_pdata))]
xdata_test <- PA_pdata[-train_ind, (ncol(PA_pdata)-1):(ncol(PA_pdata))]
Ydata_train<- Ydata[train_ind,]
Ydata_test<- Ydata[-train_ind,]
S<- ncol(Ydata_train)
S_prev <- colSums(Ydata, na.rm = TRUE, dims = 1)
p_w<- S_prev[1:(length(S_prev))]/sum(S_prev[1:(length(S_prev))])
Colnames_Y<- tibble(CN = 1:112, CODE_CBNA=colnames(Ydata))
formula <- as.formula( ~   PC1  + PC2 + I(PC1^2) + I(PC2^2))
K_prior=16
r_reduct = 5
folderpath="PCA_analysis/r5/"
##################################Species names and Functional groups #####################################
#Preparing species functional groups
Species_names_groups<- read.csv("Bauges/PFG_Bauges_Description_2017.csv", sep="\t")
true_names<- as.data.frame(names(table(Species_names_groups$PFG)))
names(true_names)<- c("PFG")
true_names$K_n<- 1:16
Species_names_groups_num<- merge(Species_names_groups,true_names, by="PFG" )
#Species_names_groups_num
True_clustering<- tibble( CODE_CBNA =  colnames(Ydata)[1: (ncol(Ydata))])
True_clust<- merge(Species_names_groups_num,True_clustering, by="CODE_CBNA")
Colnames_Y<- merge(Colnames_Y,Species_names_groups_num [,c(2,3,5)], by ="CODE_CBNA" )
Colnames_Y$species<- as.character(Colnames_Y$species)
Colnames_Y$species<- strtrim(Colnames_Y$species, 20)
##### Models description
##Calibration table
##### ALpha posterior
load("aDP16.Rdata")
load("aDP1_8.Rdata")
load("aDP1_56.Rdata")
#"#3E4A89FF"
DF_alpha <- rbind(aDP1_8,aDP16,aDP1_56)
DF_alpha$K_pr = factor(DF_alpha$K_pr, levels=c('K = 8','K = 16','K = 56'))
#pdf(file = "Plots/DP1_alpha_posterior.pdf", width=6, height =3)
aDP1<-   DF_alpha%>%
ggplot(aes(x=Probability, fill=Distribution)) +scale_fill_manual(values=c("#26828EFF", "#453781FF"))+
geom_density(adjust = 2, alpha=0.5)+
#ggtitle(c) +
xlab(TeX(sprintf('$\\alpha$')))+
ylab("Probability")+
theme_bw() +facet_grid(.~K_pr, scale="free")+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "none", plot.title = element_text(hjust = 0.5))
# aDP1
#plot(aDP1)
#dev.off()
############################################ Clusters
load("PCA_analysis/r5/DP1_analysis/Cluster_DP1_1.Rdata")
load("PCA_analysis/r5/DP1_analysis/Cluster_DP1_2.Rdata")
load("PCA_analysis/r5/PY_analysis/Cluster_PY1_1.Rdata")
load("PCA_analysis/r5/PY_analysis/Cluster_PY1_2.Rdata")
load("PCA_analysis/r5/DP_analysis/Cluster_DP_2.Rdata")
load("PCA_analysis/r5/DP_analysis/Cluster_DP_1.Rdata")
Clusters_all_1<- merge(Cluster_DP1_1, Cluster_DP_1, by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, Cluster_PY1_1,  by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, True_clust[, c("CODE_CBNA", "PFG", "K_n")], by = c("CODE_CBNA"))
#save(Clusters_all_1, file =  paste0("PCA_analysis/r5/Clusters/Clusters_all_1.Rdata"))
Clusters_all_2<- merge(Cluster_DP1_2, Cluster_DP_2, by = c("CODE_CBNA"))
Clusters_all_2<- merge(Clusters_all_2, Cluster_PY1_2,  by = c("CODE_CBNA"))
Clusters_all_2<- merge(Clusters_all_2, True_clust[, c("CODE_CBNA", "PFG", "K_n")], by = c("CODE_CBNA"))
#save(Clusters_all_2, file =  paste0("PCA_analysis/r5/Clusters/Clusters_all_2.Rdata"))
#Clusters_all_1_old <- load_object("PCA_analysis/r5/Clusters/Clusters_all_1_old.Rdata")
#arandi(Clusters_all_1_old$ClustPY1, Clusters_all_1$ClustPY1)
#Clusters_all_2_old <- load_object("PCA_analysis/r5/Clusters/Clusters_all_2_old.Rdata")
#arandi(Clusters_all_2_old$ClustDP, Clusters_all_2$ClustDP)
#arandi(Clusters_all_1$ClustPY1, Clusters_all_1$ClustDP1)
#Clusters_all_2$DP <- as.numeric(Clusters_all_2$CODE_CBNA)
#Clusters_all_1$CBN <- as.numeric(Clusters_all_1$CODE_CBNA)
#M= Clusters_all_1[order(Clusters_all_1$CBN),]
#B= Clusters_all_2[order(Clusters_all_2$CBN),]
#arandi(PY1_clust2_full$VI_est[[3]], B$ClustPY1)
#### Pairwise distances
########### Cluster distances with random
#load("PCA_analysis/r5/Cluster_DP1_1.Rdata")
load("~/Documents/GitHub/GJAM_clust/PCA_analysis/r5/DP1_analysis/Cluster_DP1_1.Rdata")
Clusters_all_2$CBN <- as.numeric(Clusters_all_2$CODE_CBNA)
Clusters_all_2_sorted= Clusters_all_2[order(Clusters_all_2$CBN),]
Random_cluster <-  sample(1:16, size = 111, replace = TRUE)
Random_cluster_w <-  sample(1:16, size = 111, replace = TRUE, prob=table(Clusters_all_2_sorted$K_n)/111)
#arandi(Cluster_PY1_2$ClustPY1,Clusters_all_2_sorted$ClustPY1 )
M_all<- data.frame()
Clusters_by_Rand<-cbind(Clusters_all_2_sorted, tibble(RU=Random_cluster), tibble(RW= Random_cluster_w))
Clusters_by_Rand_mat<- Clusters_by_Rand[,c("ClustDP1","ClustDP", "ClustPY1", "PFG", "RU", "RW")]
Mat_dist<- matrix(NA, nrow=6, ncol=6)
for(j in 1:6){
for (k in 1:6){
Mat_dist[j,k]= arandi(Clusters_by_Rand_mat[,j],Clusters_by_Rand_mat[,k])
}
}
M_print<- as.data.frame(round(Mat_dist,3))
colnames(M_print)<- colnames(Clusters_by_Rand_mat)
M_print_1<-  M_print[1:4,1:4]
M_print_1$Model <- colnames(Clusters_by_Rand_mat)[1:4]
M_rand_1<- melt(M_print_1, id=c("Model"))
M_rand_1$Model<- factor(M_rand_1$Model,levels = colnames(M_print_1))
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
library("tidyr")
download.file(url = "https://tinyurl.com/mine-data-csv",
destfile = "data/mine-data.csv")
mine.data <- read.csv(file = "data/mine-data.csv")
mine.long <- pivot_longer(data = mine.data,
cols = everything(),
names_to = "Class",
values_to = "Abundance")
mine.long
mine.data
mine.long <- pivot_longer(data = mine.data,
cols = -c(1:3),
names_to = "Class",
values_to = "Abundance")
head(mine.long)
mine.long <- pivot_longer(data = mine.data,
cols = -c(Site, Depth, Sample.name),
names_to = "Class",
values_to = "Abundance")
head(mine.long)
mine.heatmap <- ggplot(data = mine.long, mapping = aes(x = Sample.name,
y = Class,
fill = Abundance)) +
geom_tile() +
xlab(label = "Sample")
mine.heatmap
M_print<- as.data.frame(round(Mat_dist,3))
M_print
colnames(M_print)<- colnames(Clusters_by_Rand_mat)
M_print_1<-  M_print[1:4,1:4]
M_print
head(Clusters_all_2_sorted)
load("PCA_analysis/r5/DP1_analysis/Cluster_DP1_1.Rdata")
load("PCA_analysis/r5/DP1_analysis/Cluster_DP1_2.Rdata")
load("PCA_analysis/r5/PY_analysis/Cluster_PY1_1.Rdata")
load("PCA_analysis/r5/PY_analysis/Cluster_PY1_2.Rdata")
load("PCA_analysis/r5/DP_analysis/Cluster_DP_2.Rdata")
load("PCA_analysis/r5/DP_analysis/Cluster_DP_1.Rdata")
Clusters_all_1<- merge(Cluster_DP_1,Cluster_DP_1, by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, Cluster_PY1_1,  by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, Cluster_PY1_1,  by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, True_clust[, c("CODE_CBNA", "PFG", "K_n")], by = c("CODE_CBNA"))
head(Clusters_all_1)
Clusters_all_1<- merge(Cluster_DP_1,Cluster_DP1_1, by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, Cluster_PY1_1,  by = c("CODE_CBNA"))
Clusters_all_1<- merge(Clusters_all_1, True_clust[, c("CODE_CBNA", "PFG", "K_n")], by = c("CODE_CBNA"))
head(Clusters_all_1)
Clusters_all_2<- merge(Cluster_DP_2,Cluster_DP1_2, by = c("CODE_CBNA"))
Clusters_all_2<- merge(Clusters_all_2, Cluster_PY1_2,  by = c("CODE_CBNA"))
Clusters_all_2<- merge(Clusters_all_2, True_clust[, c("CODE_CBNA", "PFG", "K_n")], by = c("CODE_CBNA"))
head(Clusters_all_2)
########### Cluster distances with random
#load("PCA_analysis/r5/Cluster_DP1_1.Rdata")
#load("~/Documents/GitHub/GJAM_clust/PCA_analysis/r5/DP1_analysis/Cluster_DP1_1.Rdata")
Clusters_all_2$CBN <- as.numeric(Clusters_all_2$CODE_CBNA)
Clusters_all_2_sorted= Clusters_all_2[order(Clusters_all_2$CBN),]
Random_cluster <-  sample(1:16, size = 111, replace = TRUE)
Random_cluster_w <-  sample(1:16, size = 111, replace = TRUE, prob=table(Clusters_all_2_sorted$K_n)/111)
head(Clusters_all_2_sorted)
M_all<- data.frame()
Clusters_by_Rand<-cbind(Clusters_all_2_sorted, tibble(RU=Random_cluster), tibble(RW= Random_cluster_w))
Clusters_by_Rand_mat<- Clusters_by_Rand[,c("ClustDP","ClustDP1", "ClustPY1", "PFG", "RU", "RW")]
Mat_dist<- matrix(NA, nrow=6, ncol=6)
for(j in 1:6){
for (k in 1:6){
Mat_dist[j,k]= arandi(Clusters_by_Rand_mat[,j],Clusters_by_Rand_mat[,k])
}
}
M_print<- as.data.frame(round(Mat_dist,3))
M_print
#colnames(M_print)<- colnames(Clusters_by_Rand_mat)
colnames(M_print)<- colnames(Clusters_by_Rand_mat)
M_print
Dist_matrix<- as.data.frame(round(Mat_dist,3))
#colnames(M_print)<- colnames(Clusters_by_Rand_mat)
colnames(Dist_matrix)<- colnames(Clusters_by_Rand_mat)
Dist_matrix
mine.data <- read.csv(file = "data/mine-data.csv")
head(mine.data)
mine.long <- pivot_longer(data = mine.data,
cols = -c(Site, Depth, Sample.name),
names_to = "Class",
values_to = "Abundance")
head(mine.long)
Dist_matrix.long <- pivot_longer(data = Dist_matrix,
cols = -c("ClustDP", "ClustDP1", "ClustPY1"),
names_to = "Model",
values_to = "Distance")
Dist_matrix.long
M_print_1<-  M_print[1:4,1:4]
M_print_1$Model <- colnames(Clusters_by_Rand_mat)[1:4]
M_rand_1<- melt(M_print_1, id=c("Model"))
M_rand_1$Model<- factor(M_rand_1$Model,levels = colnames(M_print_1))
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]), expression(PY[c], "PFG")))+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]), expression(PY[c]),"PFG"))+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]), expression(PY[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(DP[c]),"PFG") )+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(DP[c]),"PFG") )+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]), expression(DP[c]), "PFG"))+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(DP[c]), "PFG"))+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
Dist_clust.heatmap <- ggplot(data = M_rand_1, mapping = aes(x = variable,
y = Model,
fill = value, color='white')) +
geom_tile(aes(fill = value)) +
geom_text(aes(label = round(value, 2)), size=5)+
scale_fill_gradient(low = 'white', high = 'black', space = 'Lab') +
xlab("")+
ylab("")+
theme_bw() +
scale_y_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]), expression(PY[c]), "PFG"))+
scale_x_discrete(breaks=c("ClustDP", "ClustDP1", "ClustPY","PFG"),labels=c("DP", expression(DP[c]),expression(PY[c]), "PFG"))+
theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 10),legend.position = "right", plot.title = element_text(hjust = 0.5))+
guides(color=FALSE)
Dist_clust.heatmap
